Learning about distributed systems in computer science involves understanding several fundamental topics that form the core of how these systems are designed, implemented, and managed. Here are the top most important general topics to focus on:

1. Introduction to Distributed Systems
   - Definition and Characteristics
   - Examples and Use Cases
2. Communication in Distributed Systems
   - Remote Procedure Calls (RPC)
   - Message Passing
   - Communication Protocols (TCP/IP, HTTP, gRPC)
3. Distributed Algorithms
   - Consensus Algorithms (Paxos, Raft)
   - Leader Election
   - Distributed Mutual Exclusion
4. Data Consistency and Replication
   - Consistency Models (Eventual, Strong, Causal)
   - Replication Techniques
   - Distributed Transactions
5. Fault Tolerance and Recovery
   - Failure Models
   - Checkpointing and Rollback
   - Redundancy and Backup Strategies
6. Distributed Storage and Databases
   - Distributed File Systems (HDFS, Ceph)
   - NoSQL Databases (Cassandra, DynamoDB)
   - Distributed SQL Databases
7. Scalability and Load Balancing
   - Horizontal vs Vertical Scaling
   - Load Balancing Techniques
8. Security in Distributed Systems
   - Authentication and Authorization
   - Secure Communication
   - Data Privacy
9. Cloud Computing and Distributed Systems
   - Cloud Infrastructure
   - Microservices Architecture
   - Containerization and Orchestration (Docker, Kubernetes)
10. Case Studies and Real-World Systems
    - Google File System (GFS)
    - MapReduce
    - Distributed Streaming Systems (Kafka, Flink)

Would you like a detailed explanation of any specific topic or guidance on resources to learn more?