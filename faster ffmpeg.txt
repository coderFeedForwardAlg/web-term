The difference in processing time between professional video editing programs and FFmpeg for simple tasks like cutting a video into two parts can be attributed to several factors:

1. Optimization and Hardware Utilization:
   - Professional software is highly optimized for performance and often leverages hardware acceleration (GPU, multi-core CPUs) to speed up processing.
   - FFmpeg, while powerful, may not always utilize hardware acceleration by default, especially for basic cut operations.

2. Processing Method:
   - Many professional editors use "smart" cutting techniques that do not re-encode the entire video, instead performing a "stream copy" which is very fast.
   - FFmpeg can also do stream copying with the right parameters, but if not specified, it may re-encode the video, which takes much longer.

3. User Interface and Workflow:
   - Professional editors often have optimized workflows and background processes that streamline simple edits.
   - FFmpeg is command-line based and may require multiple steps or re-encoding, adding to the time.

4. Video Format and Codec:
   - Certain formats and codecs are faster to cut without re-encoding.
   - If FFmpeg is re-encoding due to incompatible formats or settings, it will take longer.

5. Default Settings:
   - Professional software often defaults to the fastest method for cuts (stream copy).
   - FFmpeg defaults may vary, and re-encoding is often the default unless explicitly instructed to copy streams.

**Example of a fast cut with FFmpeg:**
```bash
ffmpeg -i input.mp4 -ss 00:00:00 -to 00:01:00 -c copy output.mp4
```
This command cuts the first minute without re-encoding, making it very fast.

**Summary:**
The main reason is that professional programs optimize for speed by using stream copying and hardware acceleration, whereas FFmpeg may re-encode the video unless specifically instructed not to, leading to longer processing times.